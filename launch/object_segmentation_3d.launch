<launch>

  <arg name="INPUT_IMAGE" />
  <arg name="INPUT_CLOUD" />
  <arg name="FIXED_FRAME" />
  <arg name="MANAGER" />
  <arg name="QVGA" default="false" />  <!-- true means.. input image: VGA, input depth: QVGA -->
  <arg name="SIM" default="false" />
  <arg name="USE_PASSTHROUGH" default="true" />

  <rosparam command="load" file="$(find hrp2_apc)/config/label_names.yaml" />

  <node name="fcn_object_segmentation"
        pkg="jsk_perception" type="fcn_object_segmentation.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />  <!-- rgb timestamp --> 
    <rosparam subst_value="true">
      gpu: 0
      model_name: fcn32s
      model_h5: $(find jsk_apc2016_common)/trained_data/fcn32s_6000.chainermodel
    </rosparam>
    <remap from="~target_names" to="label_names" />
  </node>

  <!-- proba image + point cloud-> octomap -> point cloud centroid -->
  <node name="extract_image_channel"
        pkg="jsk_perception" type="extract_image_channel.py">
    <remap from="~input" to="fcn_object_segmentation/output/proba_image" />  <!-- rgb timestamp -->
    <param name="~channel" value="2" if="$(arg SIM)" />
  </node>
  <group if="$(arg QVGA)">
    <node name="image_resizer"
          pkg="nodelet" type="nodelet"
          args="load resized_image_transport/ImageResizer $(arg MANAGER)">
     <remap from="~input/image" to="extract_image_channel/output" />
     <remap from="~output/image" to="extract_image_channel/output/half" />
     <rosparam>
       use_camera_info: false
       resize_scale_x: 0.5
       resize_scale_y: 0.5
       interpolation: NEAREST
     </rosparam>
    </node>
  </group>
  <group if="$(arg USE_PASSTHROUGH)">
    <node name="passthrough_octomap_cloud_in"
          pkg="nodelet" type="nodelet"
          args="load jsk_topic_tools/Passthrough $(arg MANAGER)">
      <remap from="~input" to="$(arg INPUT_CLOUD)" />
      <rosparam>
        default_duration: 86400
      </rosparam>
    </node>
  </group>
  <arg name="INPUT_CLOUD_OCTOMAP" value="passthrough_octomap_cloud_in/output" if="$(arg USE_PASSTHROUGH)" />
  <arg name="INPUT_CLOUD_OCTOMAP" value="$(arg INPUT_CLOUD)" unless="$(arg USE_PASSTHROUGH)" />
  <arg name="INPUT_IMAGE_OCTOMAP" value="extract_image_channel/output/half" if="$(arg QVGA)" />
  <arg name="INPUT_IMAGE_OCTOMAP" value="extract_image_channel/output" unless="$(arg QVGA)" />
  <node name="label_octomap_server"
        pkg="octomap_server" type="label_octomap_server">
    <remap from="cloud_in" to="$(arg INPUT_CLOUD_OCTOMAP)" />  <!-- depth timestamp -->
    <remap from="proba_image_in" to="$(arg INPUT_IMAGE_OCTOMAP)" />  <!-- rgb timestamp -->
    <rosparam>
      frame_id: odom
      resolution: 0.01
      latch: false
      publish_rate: 10
    </rosparam>
  </node>
  <node name="centroid_publisher"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/CentroidPublisher $(arg MANAGER)">
    <remap from="~input" to="octomap_point_cloud_centers" />
    <rosparam>
      publish_tf: false
    </rosparam>
  </node>

  <!-- label -> mask -> indices -> cloud -> resized cloud  -> cluster indices -->
  <node name="label_to_mask"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/LabelToMaskImage $(arg MANAGER)">
    <remap from="~input" to="fcn_object_segmentation/output" />  <!-- rgb timestamp -->
    <param name="~label_value" value="2" if="$(arg SIM)" />
  </node>
  <node name="mask_to_point_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/MaskImageToPointIndices $(arg MANAGER)">
    <remap from="~input" to="label_to_mask/output" />  <!-- rgb timestamp -->
  </node>
  <node name="extract_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg MANAGER)">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />  <!-- depth timestamp -->
    <remap from="~indices" to="mask_to_point_indices/output" />  <!-- rgb timestamp -->
    <rosparam>
      approximate_sync: true
      queue_size: 100
      keep_organized: true
    </rosparam>
  </node>
  <node name="resize_points_publisher"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher $(arg MANAGER)">
    <remap from="~input" to="extract_indices/output" />  <!-- depth timestamp -->
    <rosparam>
      step_x: 2
      step_y: 2
    </rosparam>
  </node>
  <node name="euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg MANAGER)">
    <remap from="~input" to="resize_points_publisher/output" />  <!-- depth timestamp -->
    <rosparam>
      min_size: 10
      max_size: 10000
      tolerance: 0.05
    </rosparam>
  </node>
  <node name="cluster_indices_decomposer_target"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg MANAGER)">
    <remap from="~input" to="resize_points_publisher/output" />  <!-- depth timestamp -->
    <remap from="~target" to="euclidean_clustering/output" />  <!-- depth timestamp -->
    <rosparam subst_value="true">
      approximate_sync: false
      queue_size: 1000
      align_boxes: true
      align_boxes_with_plane: false
      target_frame_id: $(arg FIXED_FRAME)
    </rosparam>
  </node>

  <!-- Visualization -->
  <node name="label_names_overlay"
        pkg="hrp2_apc" type="label_names_overlay.py"
        respawn="true">
    <remap from="~label_names" to="label_names" />
    <remap from="~target_label_value" to="label_to_mask/label_value" />
  </node>
  <node name="colorize_float_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ColorizeFloatImage $(arg MANAGER)">
    <remap from="~input" to="extract_image_channel/output" />
  </node>
  <node name="overlay_image_color_on_mono"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/OverlayImageColorOnMono $(arg MANAGER)">
    <remap from="~input/color" to="colorize_float_image/output" />
    <remap from="~input/mono" to="$(arg INPUT_IMAGE)" />
  </node>
  <node name="colorize_labels"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ColorizeLabels $(arg MANAGER)">
    <remap from="~input" to="fcn_object_segmentation/output" />  <!-- rgb timestamp -->
  </node>
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />  <!-- rgb timestamp -->
    <remap from="~input/label" to="fcn_object_segmentation/output" />  <!-- rgb timestamp -->
    <rosparam>
      approximate_sync: false
      queue_size: 100
    </rosparam>
    <remap from="~label_names" to="label_names" />
  </node>

</launch>
